{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://gitlab.ub.uni-bielefeld.de/gi/sans/-/raw/master/nextflow_schema.json",
    "title": "Nextflow pipeline parameters",
    "description": "This pipeline uses Nextflow and processes some kind of data. The JSON Schema was built using the nf-core pipeline schema builder.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input / Output options",
            "type": "object",
            "description": "General Input",
            "default": "",
            "properties": {
                "inputdir": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "fas fa-sign-in-alt",
                    "description": "Input directory containing all fasta or fastq files"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "fas fa-sign-out-alt",
                    "description": "Output directory where output is written to"
                }
            },
            "required": [
                "inputdir",
                "outdir"
            ],
            "fa_icon": "fas fa-terminal"
        },
        "parameters": {
            "title": "Parameters",
            "type": "object",
            "description": "Optional Parameters",
            "default": "",
            "properties": {
                "mean": {
                    "type": "string",
                    "default": "geom2",
                    "enum": [
                        "arith",
                        "geom",
                        "geom2"
                    ],
                    "description": "Mean weight function to handle asymmetric splits"
                },
                "top": {
                    "type": "string",
                    "pattern": "^\\d+[n]?$",
                    "description": "Number of splits in the output list",
                    "help_text": "Use `<integer>n` to limit relative to number of input files\nUse `<integer>` to limit by absolute value"
                },
                "kmer": {
                    "type": "number",
                    "description": "Length of k-mers",
                    "default": 31,
                    "minimum": 12,
                    "maximum": 64
                },
                "qualify": {
                    "type": "number",
                    "description": "Discard k-mers with lower coverage than this threshold",
                    "minimum": 2,
                    "maximum": 100
                },
                "filter": {
                    "type": "string",
                    "enum": [
                        "strict",
                        "weakly",
                        "2-tree",
                        "3-tree"
                    ],
                    "help_text": "The sorted list of splits is greedily filtered, i.e., splits are iterated from strongest to weakest and a split is kept if and only if the filter criterion is met.\n - strict: a split is kept if it is compatible to all previously filtered splits, i.e., the resulting set of splits is equivalent to a tree\n - weakly: a split is kept if it is weakly compatible to all previously filtered splits\n - n-tree: several sets of compatible splits (=trees) are maintained. A split is added to the first, second, ... n-th set if possible (compatible).",
                    "description": "Output is a greedy maximum weight subset"
                },
                "verbose": {
                    "type": "boolean",
                    "hidden": true,
                    "default": true,
                    "description": "Print information messages during execution"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/parameters"
        }
    ]
}