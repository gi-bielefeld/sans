{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://gitlab.ub.uni-bielefeld.de/gi/sans/-/raw/master/nextflow_schema.json",
    "title": "Nextflow pipeline parameters",
    "description": "This pipeline uses Nextflow and processes some kind of data. The JSON Schema was built using the nf-core pipeline schema builder.",
    "type": "object",
    "definitions": {
        "input_output": {
            "title": "Input / Output",
            "type": "object",
            "description": "Required input and output arguments",
            "default": "",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "path",
                    "fa_icon": "fas fa-sign-in-alt",
                    "description": "Either: Input directory containing all fasta or fastq files\nOr: zip or tar.gz file containing all fasta or fastq files (no folders)"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "fas fa-sign-out-alt",
                    "description": "Output directory where output is written to"
                }
            },
            "required": [
                "input",
                "outdir"
            ]
        },
        "optional_input_arguments": {
            "title": "Advanced Input Arguments",
            "type": "object",
            "description": "Specify input",
            "default": "",
            "properties": {
                "qualify": {
                    "type": "integer",
                    "description": "Discard k-mers with lower abundance than this threshold",
                    "minimum": 2,
                    "maximum": 10,
                    "help_text": "When analyzing read data, a common preprocessing step is to filter out low coverage\nk-mers that typically arise from sequencing errors. SANS ambages includes a new\noption to perform such a filtering step, allowing raw read data to be analyzed without\nthe need to run another tool first. A minimum coverage threshold can be specified,\ni.e., --qualify 2 filters out all k-mers that occur less than 2 times per genome."
                },
                "file_of_files": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Specify input in more detail",
                    "help_text": "For each input genome, you can define an identifyer, specify multiple input files (gzipped or not), and optionally specify a minimum abundance threshold (overwriting the global qualify-value:\n Identifier : File1 ; ... ; FileN ! MinAbundance\n\nExample:\nTaxon1 : assembled_genome.fasta ! 1\nTaxon2 : reads_fw.fastq.gz ; reads_rv.fastq.gz ! 3"
                },
                "amino": {
                    "type": "boolean",
                    "description": "input provides amino acid sequences",
                    "default": false
                },
                "tanslate": {
                    "type": "boolean",
                    "description": "input provides coding sequences",
                    "help_text": "Provided coding sequences will be translated to amino acids. Reverse complement k-mers are not considered and the default k-mer length is 10. By default, the standard genetic code will be used for translation. Use --code to specify different code tables.",
                    "default": false
                }
            },
            "fa_icon": "fas fa-tag"
        },
        "further_optional_parameters": {
            "title": "Advanced Parameters",
            "type": "object",
            "description": "Optional Parameters",
            "default": "",
            "properties": {
                "kmer": {
                    "type": "integer",
                    "description": "k-mer length",
                    "help_text": "You may want to try different values for the k-mer length. On shorter or rather heterogeneous sequences, use a smaller k, e.g., -k 15.",
                    "default": 31,
                    "minimum": 9,
                    "maximum": 64
                },
                "label": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Color taxa according to given groups",
                    "help_text": "To depict the phylogeny on a higher level, taxa can be assigned to groups. Each group is then represented by a color and individual text labels of taxa are replaced by colored circles accordingly. Use option --label groups.tsv to provide a mapping of some or all genome identifiers to arbitrary group names. Use --label_colors to specify custom color assignments to groups."
                },
                "label_colors": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Assign colors to groups",
                    "help_text": "additional tab-separated file with group and color (rgb values, e.g. 90 0 255)"
                },
                "top": {
                    "type": "string",
                    "pattern": "^\\d+[n]?$",
                    "description": "Number of splits in the output list",
                    "help_text": "For large data sets, the list of splits can become very long. We recommend to restrict the output for n genomes as input to the 10n strongest splits in the output using --top 10n. Use an integer (without n) to limit by an absolute value.",
                    "default": "10n"
                },
                "tree": {
                    "type": "boolean",
                    "help_text": "The sorted list of splits is greedily filtered, i.e., splits are iterated from strongest to weakest and a split is kept if and only if the filter criterion is met.\n In a first step, the weakly filter is applied, i.e., a split is kept if it is weakly compatible to all previously filtered splits. If set to true, in a second step the strict filter is applied, i.e., a split is kept if the resulting set of splits is equivalent to a tree.",
                    "description": "Additionally filter the output splits to obtain a tree.",
                    "default": true
                },
                "pdf": {
                    "type": "boolean",
                    "description": "Output network as PDF file with Splitstree 4",
                    "default": true
                }
			},
            "fa_icon": "fas fa-wrench"
		},
        "expert_optional_parameters": {
            "title": "Expert Parameters",
            "type": "object",
            "description": "Optional Parameters",
            "default": "",
            "properties": {
                "filter": {
                    "type": "string",
                    "enum": [
                        "strict",
                        "weakly",
                        "2-tree",
                        "3-tree",
                        "none",
                        "default"
                    ],
                    "help_text": "The sorted list of splits is greedily filtered, i.e., splits are iterated from strongest to weakest and a split is kept if and only if the filter criterion is met. By default, the CloWM version of SANS first generates a phylogenetic split network (weakly compatible splits), and then also filters the splits to obtain a tree (strictly compatible spltis).",
                    "description": "Filter the output splits (greedy maximum weight subset)",
                    "default": "default",
                    "hidden": true
                },
                "bootstrapping": {
                    "type": "integer",
                    "description": "Bootstrapping with n replicates",
                    "help_text": "To assess the robustness of reconstructed splits with respect to noise in the input data, bootstrap replicates can be constructed by randomly varying the observed k-mer content. The originally determined splits or tree edges are compared to n bootstrap replicates. This option requires to select a filter criterion other than none and default, see --filter.",
                    "minimum": 1,
                    "maximum": 1000,
                    "hidden": true
                },
                "support": {
                    "type": "number",
                    "description": "threshold to filter low support splits (e.g. 0.75)",
                    "help_text": "Filter out low support splits, e.g., those appearing in less than 75% of the bootstrap replicates.",
                    "minimum": 0,
                    "maximum": 1,
                    "default": 0,
                    "hidden": true
                },
                 "consensus": {
                    "type": "string",
                    "enum": [
                        "strict",
                        "weakly",
                        "2-tree",
                        "3-tree",
                        "none"
                    ],
                    "help_text": "generate a consensus split network or tree",
                    "description": "filter all splits (greedily according to their support value) to obtain a consensus split network or tree",
                    "default": "none",
                    "hidden": true
                },
                "iupac": {
                    "type": "integer",
                    "description": "resolve ambiguous iupac bases or amino acids",
                    "help_text": "Specify a threshold to limit the number of considered k-mers per position. By default, respective k-mers are ignored.",
                    "minimum": 0,
                    "maximum": 1000,
                    "default": 0,
                    "hidden": true
                },
                "norev": {
                    "type": "boolean",
                    "description": "do not consider reverse complement k-mers",
                    "help_text": "By default, each *k*-mer is compared to its reverse complement and the lexicagrafically smaller ist chosen as a canonical representative.",
                    "default": false,
                    "hidden": true
                },
                "code": {
                    "type": "integer",
                    "description": "Select the ID of the genetic code to be used for translation, if --translate is used.",
                    "help_text": "Default: 1 (standard genetic code). Use 11 for Bacterial, Archaeal, and Plant Plastid Code. See https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi for details.",
                    "minimum": 1,
                    "maximum": 33,
                    "default": 1,
                    "hidden": true
                },
                "mean": {
                    "type": "string",
                     "enum": [
                        "arith",
                        "geom",
                        "geom2"
                    ],
                    "description": "Mean weight function to combine k-mer counts to final split weight",
                    "default": "geom2",
                    "hidden": true
                },
                "core": {
                    "type": "boolean",
                    "description": "output core k-mers",
                    "help_text": "output all core k-mers, i.e., k-mers appearing in all input genomes, in a fasta file sans_core.fasta",
                    "default": false,
                    "hidden": true
                },
                "blacklist": {
                    "type": "string",
                    "format": "file-path",
                    "description": "k-mers to be ignored",
                    "help_text": "Fasta or Fastq file containing k-mers to be ignored when reading input files",
                    "hidden": true
                }
           },
            "fa_icon": "fas fa-magic"
		}
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output"
        },
        {
            "$ref": "#/definitions/optional_input_arguments"
        },
        {
            "$ref": "#/definitions/further_optional_parameters"
        },
        {
            "$ref": "#/definitions/expert_optional_parameters"
        }
    ]
}
